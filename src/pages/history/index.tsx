// import { ConnectButton } from "@rainbow-me/rainbowkit";
import Image from "next/image";
import type { NextPage } from "next";
import Head from "next/head";
import styles from "../../styles/Home.module.css";
import logo from "../../../public/images/logopc.png";
import logomb from "../../../public/images/logomb.png";
import React, { useState } from "react";
// import CustomSelect from "../components/CustomSelect";
import SelectLangues from "../../components/SelectLangues";
import TableHistory from "../../components/TableHistory";
import { toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { useTranslation } from "next-i18next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import Link from "next/link";
import { useRouter } from "next/router";
import main from "../../../public/images/main.png";
import SidebarMobile from "../../components/SidebarMobile";
import Pagination from "../../components/Pagination";

const Home: NextPage = () => {
  const router = useRouter();
  const { t } = useTranslation("common");
  const [showSubtitle, setShowSubtitle] = useState(false);
  const [email, setEmail] = useState("123@gmail.com");
  const [error, setError] = useState("");
  const [isModalOpen, setModalOpen] = useState(false);
  const [isSidebarOpen, setIsSidebarOpen] = useState(false);
  const [isNetworkSwitchHighlighted, setIsNetworkSwitchHighlighted] =
    useState(false);
  const [isConnectHighlighted, setIsConnectHighlighted] = useState(false);

  const closeAll = () => {
    setIsNetworkSwitchHighlighted(false);
    setIsConnectHighlighted(false);
  };
  const toggleSidebar = () => {
    setIsSidebarOpen(true);
  };
  const emitCloseSidebar = () => {
    setIsSidebarOpen(false);
  };

  const handleChange = (selectedOption) => {};

  return (
    <div className={styles.container}>
      <Head>
        <title>Athene Network</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <div className={styles.header}>
          <div className={styles.navbar}>
            <div className={styles.logo}>
              <Link href="/">
                <Image src={logo} alt="picture" layout="fixed" />
              </Link>
            </div>
            <div className={styles.logomb}>
              <div className={styles.logombTwo}>
                <Image
                  className={styles.logombIcon}
                  src={main}
                  alt="picture"
                  layout="fixed"
                  onClick={toggleSidebar}
                />
                <Link href="/">
                  <Image src={logomb} alt="picture" layout="fixed" />
                </Link>
              </div>
            </div>
            <nav className={styles.nav}>
              <Link href="/">
                <div
                  className={
                    router.pathname === "/" ? styles.activeTab : styles.tab
                  }
                >
                  {t("home")}
                </div>
              </Link>
              <Link href="/history">
                <div
                  className={
                    router.pathname === "/history"
                      ? styles.activeTab
                      : styles.tab
                  }
                >
                  {t("history")}
                </div>
              </Link>
            </nav>
          </div>
          <div className={styles.actionBtn}>
            <div className={styles.actionBtnConnet}>
            <div className={styles.buttons}>
            <div
              onClick={closeAll}
              className={`${styles.highlight} ${
                isNetworkSwitchHighlighted ? styles.highlightSelected : ``
              }`}
            >
              <w3m-network-button />
            </div>
            <div
              onClick={closeAll}
              className={`${styles.highlight} ${
                isConnectHighlighted ? styles.highlightSelected : ``
              }`}
            >
              <w3m-button />
            </div>
          </div>
              {/* <ConnectButton label="Connect Wallet" accountStatus="address" /> */}
            </div>
            <div className={styles.actionBtnSelect}>
              <SelectLangues onChange={handleChange} />
            </div>
          </div>
        </div>
        {/* history */}
        <div className={styles.homeContent}>
          <div className={styles.homeContentTitle}> {t("title_history")}</div>
          <TableHistory />
        </div>
        <div className={styles.homeFooter}>
          2024 Athene Group LTD. | All rights reserved.
        </div>
        <SidebarMobile
          isOpen={isSidebarOpen}
          toggleSidebar={emitCloseSidebar}
        />
      </main>
    </div>
  );
};
export async function getStaticProps({ locale }: { locale: string }) {
  return {
    props: {
      ...(await serverSideTranslations(locale, ["common"])),
    },
  };
}

export default Home;
